name: Move files and merge
description: Moves terragrunt templates and submits PR
inputs:
  GITHUB_TOKEN:
    description: 'PAT to checkout the repository to edit'
  APPLICATION_REPO_NAME:
    description: 'Name of the application within the organization'
  APPLICATION_REPO:
    description: 'Path to the application repository within the organization'
  DEPLOYMENT_REPO:
    description: 'Path to the cloud-deployment repository within the organization'
  INITIALIZATION_IAC_TO_EDIT:
    description: 'Path to the initialization IaC file in the application repo'
  INITIALIZATION_IAC_EDITS:
    description: 'Bash object holding required configuration changes'
  IAC_TO_EDIT:
    description: 'Path to the IaC file in the application repo'
  IAC_EDITS:
    description: 'Bash object holding required configuration changes'
  APPLICATION_REPO_LOCAL_PATH:
    description: 'Where the cloned repo will be placed in the workflow agent'
    default: 'target'
  DEPLOYMENT_REPO_LOCAL_PATH:
    description: 'Where the cloned repo will be placed in the workflow agent'
    default: 'deploy'
    
runs:
  using: "composite"
  steps:
    - name: Checkout application repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.APPLICATION_REPO }}
        token: ${{ inputs.GITHUB_TOKEN }}
        path: ${{ inputs.APPLICATION_REPO_LOCAL_PATH }}

    - name: Checkout cloud-deployment repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.DEPLOYMENT_REPO }}
        token: ${{ inputs.GITHUB_TOKEN }}
        path: ${{ inputs.DEPLOYMENT_REPO_LOCAL_PATH }}

    - uses: actions/setup-go@v5
      with:
        go-version: '^1.13.1' # The Go version to download (if necessary) and use.

    - name: Get hcledit
      shell: bash
      run: |
        git clone https://github.com/minamijoyo/hcledit
        cd hcledit/
        make install
        hcledit version
        cd ../

    - name: Move deployment templates from ${{ inputs.APPLICATION_REPO_NAME }} to cloud-deployment
      shell: bash
      env: 
        APPLICATION_REPO: ${{ inputs.APPLICATION_REPO }}
        DEPLOYMENT_REPO: ${{ inputs.DEPLOYMENT_REPO }}
        APPLICATION_REPO_LOCAL_PATH: ${{ inputs.APPLICATION_REPO_LOCAL_PATH }}
        DEPLOYMENT_REPO_LOCAL_PATH: ${{ inputs.DEPLOYMENT_REPO_LOCAL_PATH }}
        INITIALIZATION_TEMPLATE_ORIGIN: "${{ inputs.APPLICATION_REPO_LOCAL_PATH }}/deployment-templates/initialization-template.terragrunt.hcl"
        INITIALIZATION_TEMPLATE_DESTINATION: "${{ inputs.DEPLOYMENT_REPO_LOCAL_PATH }}/live/aws/_initializations/${{ inputs.APPLICATION_REPO_NAME }}"
        TEMPLATE_ORIGIN: "${{ inputs.APPLICATION_REPO_LOCAL_PATH }}/deployment-templates/template.terragrunt.hcl"
        TEMPLATE_DESTINATION_DEV: "${{ inputs.DEPLOYMENT_REPO_LOCAL_PATH }}/live/aws/dev/applications/${{ inputs.APPLICATION_REPO_NAME }}"
        TEMPLATE_DESTINATION_UAT: "${{ inputs.DEPLOYMENT_REPO_LOCAL_PATH }}/live/aws/uat/applications/${{ inputs.APPLICATION_REPO_NAME }}"
        TEMPLATE_DESTINATION_PROD: "${{ inputs.DEPLOYMENT_REPO_LOCAL_PATH }}/live/aws/prod/applications/${{ inputs.APPLICATION_REPO_NAME }}"
      run: |
        hcledit attribute --update --file $INITIALIZATION_TEMPLATE_ORIGIN set locals.repo_path \"$APPLICATION_REPO\"
        hcledit attribute --update --file $TEMPLATE_ORIGIN set locals.repo_path \"$APPLICATION_REPO\"
        hcledit attribute --update --file $TEMPLATE_ORIGIN set locals.repo_name \"$APPLICATION_REPO_NAME\"

        mkdir $INITIALIZATION_TEMPLATE_DESTINATION || true
        mkdir $TEMPLATE_DESTINATION_DEV || true
        mkdir $TEMPLATE_DESTINATION_UAT || true
        mkdir $TEMPLATE_DESTINATION_PROD || true

        TERRAGRUNT_FILENAME=terragrunt.hcl

        INITIALIZATION_TEMPLATE_DESTINATION_FILEPATH=$INITIALIZATION_TEMPLATE_DESTINATION/$TERRAGRUNT_FILENAME
        TEMPLATE_DESTINATION_DEV_FILEPATH=$TEMPLATE_DESTINATION/TERRAGRUNT_FILENAME
        TEMPLATE_DESTINATION_UAT_FILEPATH=$TEMPLATE_DESTINATION/TERRAGRUNT_FILENAME
        TEMPLATE_DESTINATION_PROD_FILEPATH=$TEMPLATE_DESTINATION/TERRAGRUNT_FILENAME

        mv $INITIALIZATION_TEMPLATE_ORIGIN INITIALIZATION_TEMPLATE_DESTINATION_FILEPATH
        mv $TEMPLATE_ORIGIN $TEMPLATE_DESTINATION_DEV
        mv $TEMPLATE_ORIGIN $TEMPLATE_DESTINATION_UAT
        mv $TEMPLATE_ORIGIN $TEMPLATE_DESTINATION_PROD

        hcledit attribute --update --file $TEMPLATE_DESTINATION_DEV_FILEPATH set locals.environment_name \"dev\"
        hcledit attribute --update --file $TEMPLATE_DESTINATION_DEV_FILEPATH set locals.environment_subdomain \"dev\"
        hcledit attribute --update --file $TEMPLATE_DESTINATION_UAT_FILEPATH set locals.environment_name \"uat\"
        hcledit attribute --update --file $TEMPLATE_DESTINATION_UAT_FILEPATH set locals.environment_subdomain \"uat\"
        hcledit attribute --update --file $TEMPLATE_DESTINATION_PROD_FILEPATH set locals.environment_name \"prod\"
        hcledit attribute --update --file $TEMPLATE_DESTINATION_PROD_FILEPATH set locals.environment_subdomain \"www\"

    - name: Configure application IaC
      shell: bash
      env: 
        INITIALIZATION_IAC_TO_EDIT: ${{ inputs.INITIALIZATION_IAC_TO_EDIT }}
        IAC_TO_EDIT: ${{ inputs.IAC_TO_EDIT }}
      run: |
        declare -A initialization_iac_edits=${{ inputs.INITIALIZATION_IAC_EDITS }};
        for field in "${!initialization_iac_edits[@]}"; do
          value=${initialization_iac_edits[$field]}
          echo "Key: $field, Value: $value";
          hcledit attribute --update --file $INITIALIZATION_IAC_TO_EDIT set locals.$field \"$value\"
        done
        declare -A iac_edits=${{ inputs.IAC_EDITS }};
        for field in "${!iac_edits[@]}"; do
          value=${iac_edits[$field]}
          echo "Key: $field, Value: $value";
          hcledit attribute --update --file $IAC_TO_EDIT set locals.$field \"$value\"
        done

    - name: Create Pull Request to cloud-deployment
      id: pr-to-cloud-deployment
      uses: peter-evans/create-pull-request@v7
      with:
        branch: setup/${{ inputs.APPLICATION_REPO_NAME }}
        commit-message: Set up deployment for ${{ inputs.APPLICATION_REPO_NAME }}
        token: ${{ inputs.GITHUB_TOKEN }}
        path: ${{ inputs.DEPLOYMENT_REPO_LOCAL_PATH }}

    - name: Create Pull Request to ${{ inputs.APPLICATION_REPO_NAME }}
      id: pr-to-app-repo
      uses: peter-evans/create-pull-request@v7
      with:
        branch: setup/initial-iac-configuration
        commit-message: Set up IaC with the desired configuration
        token: ${{ inputs.GITHUB_TOKEN }}
        path: ${{ inputs.APPLICATION_REPO_LOCAL_PATH }}

    - name: Merge PR to cloud-deployment
      shell: bash
      run: gh pr merge --merge --admin ${{ steps.pr-to-cloud-deployment.outputs.pull-request-number }} --repo ${{ inputs.DEPLOYMENT_REPO }} || true
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Merge PR to ${{ inputs.APPLICATION_REPO_NAME }}
      shell: bash
      run: gh pr merge --merge --admin ${{ steps.pr-to-app-repo.outputs.pull-request-number }} --repo ${{ inputs.APPLICATION_REPO }} || true
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}